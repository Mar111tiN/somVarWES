from yaml import CLoader as Loader, load, dump
import os

# ############ SETUP ##############################
configfile: "configs/config_DLBCL_Japan_cache.yaml"
# configfile: "configs/config.json"

# include helper functions
include: "includes/io.snk"
include: "includes/utils.snk"


# extract the scriptdir for creating shell_paths
snakedir = os.path.dirname(workflow.snakefile)
scriptdir = os.path.join(snakedir, "scripts")

# load the sample independent config file
general_config_file = os.path.join(snakedir, config['config'])
with open(general_config_file, "r") as stream:
    general_config = load(stream, Loader=Loader)
config.update(general_config)

work_dir = static_path(config['EBscore']['pon_path'])
workdir: work_dir

# ############ GLOBALS ############################
chrom_list = get_chrom_list(config)

# ############ INCLUDES ###########################
include: "includes/EBcache.snk"

# specified wildcards have to match the regex
wildcard_constraints:
    # eg sample cannot contain _ or / to prevent ambiguous wildcards
    chrom = "[^_/.]+",


rule all:
    input:
        expand("matrix/{chrom}.pon.gz", chrom=chrom_list),
        expand("AB/{chrom}.AB.gz", chrom=chrom_list),
        # "splitAB/chr1.0.AB.gz"
        # "AB/chr1.AB.gz"
	    # "PONcache.done"

onstart:
    print(f" Generating Cache files in {work_dir}.......")
    try:
        os.remove("zero/done")
        print("Removing zero/done")
    except OSError:
        pass

onsuccess:
    print(f"Workflow finished - EBcache has been generated and stored in {work_dir}")
