rule TN2CNV:
    input:
        pileup = "pileup/{sample}_{tumor}-{normal}.{chrom}.gz"
    output: 
        cov = "cnv/{sample}_{tumor}-{normal}.{chrom}.cov.gz",
        snp = "cnv/{sample}_{tumor}-{normal}.{chrom}.snp"
    params:
        genmap_split_path = full_path('genmap_split'),
        gc_split_path = full_path('gcratio_split'),
        bedfile = full_path('bed_file')
    threads:
        config['CNV']['coverage']['threads']
    conda:
        f"../{config['envs']}/samscipy-env.yml"
    script:
        "../scripts/CNV_snake.py"


rule combineCNV:
    input:
        cov = expand("cnv/{{sample}}_{{tumor}}-{{normal}}.{chrom}.cov.gz", chrom=chrom_list),
        snp = expand("cnv/{{sample}}_{{tumor}}-{{normal}}.{chrom}.snp", chrom=chrom_list)
    output:
        cov = "CNV/{sample}/raw/{sample}_{tumor}-{normal}.cov.gz",
        snp = "CNV/{sample}/raw/{sample}_{tumor}-{normal}.snp",
        plot = "CNV/{sample}/plots/{sample}_{tumor}-{normal}_{tumor}.snp.raw.jpg",
        CNV = "CNV/{sample}/data/{sample}_{tumor}-{normal}.cnv.snp.gz",
        fullCNV = "CNV/{sample}/data/{sample}_{tumor}-{normal}.cnv.gz"
    params:
        pon_path = static_path(config['EBscore']['pon_path']),
        chrom_list=chrom_list
    threads:
        config['CNV']['combine']['threads']
    conda:
        f"../{config['envs']}/plot-env.yml"
    script:
        "../scripts/CNV_combine.py"


rule prepareASCAT:
    input:
        CNV = "CNV/{sample}/data/{sample}_{tumor}-{normal}.cnv.snp.gz"
    output:
        bafN = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{normal}_baf.tsv",
        bafT = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{tumor}_baf.tsv",
        logrN = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{normal}_logr.tsv",
        logrT = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{tumor}_logr.tsv",
        germ_baf = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_germline_baf.tsv",
        germ_log = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_germline_logr.tsv"
    threads:
        1
    script:
        "../scripts/preASCAT.py"


rule runASCAT:
    input: 
        normal_baf = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{normal}_baf.tsv",
        tumor_baf = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{tumor}_baf.tsv",
        normal_log = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{normal}_logr.tsv",
        tumor_log = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{tumor}_logr.tsv",
    output: 
        tumor = "CNV/{sample}/ASCAT/{sample}_{tumor}-{normal}.tumour.png"
    conda:
        f"../{config['envs']}/R-env.yml"
    threads:
        1
    script:
        "../scripts/ascat.R" 

# rule runASCAT2:
#     input: 
#         sample_baf = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{type}_baf.tsv",
#         sample_log = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_{type}_logr.tsv",
#         germ_baf = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_germline_baf.tsv",
#         germ_log = "CNV/{sample}/pre/{sample}_{tumor}-{normal}_germline_logr.tsv"
#     output: 
#         tumor = "CNV/{sample}/ASCAT/{sample}_{tumor}-{normal}_{type}.tumour.png"
#     conda:
#         f"../{config['envs']}/env/R-env.yml"
#     threads:
#         1
#     script:
#         "../scripts/ascat2.R" 


rule SNPlot:
    input:
        CNV = "CNV/{sample}/data/{sample}_{tumor}-{normal}.cnv.snp.gz"
    output:
        plot="SNPlot/{sample}_{tumor}-{normal}.SNPmatch.jpg",
    threads:
        1
    conda:
        f"../{config['envs']}/plot-env.yml"
    script:
        "../scripts/plot_SNP.py"